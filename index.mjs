import APIProto from './API.mjs'

const pages = {
    main: {
        type: 'page',
        childs: [
            {
                type: 'block',
                childs: [
                    '–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å–µ—Ä–≤–µ—Ä–æ–º',
                    [ // –±–ª–æ–∫ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –≤ —Å—Ç—Ä–æ–∫—É
                        {
                            type: 'button',
                            onClick: {
                                action: 'getPage',
                                args: ['second']
                            },
                            text: '‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',
                        },
                        {
                            type: 'button',
                            onClick: {
                                action: 'getWatchesCount',
                                args: ['main', 'watchesCountEditable']
                            },
                            text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤',
                        },
                        {
                            type: 'button',
                            onClick: {
                                action: 'throwServerError',
                            },
                            text: 'üõë –í—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
                        },
                    ],
                    {
                        type: 'image',
                        src: 'https://png.pngtree.com/thumb_back/fw800/back_our/20190617/ourmid/pngtree-blue-tech-abstract-background-image_128874.jpg',
                        ratio: '1:1',
                        width: '40%',
                        round: true,
                    },
                ],
            },
            '–ö–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é —Å–µ—Ä–≤–µ—Ä–∞: ',
            {
                type: 'dynamic',
                template: '–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º—ã—Ö (–∫–∞–∂–¥—ã–µ 5—Å.): %d; ',
                update: {
                    action: 'getWatchesCount',
                    args: ['main']
                },
                default: [ 0 ],
                interval: 5000,
            },
            {
                type: 'editable',
                id: 'watchesCountEditable',
                template: '–≤—Ä—É—á–Ω—É—é –æ–±–Ω–æ–≤–ª—è–µ–º—ã—Ö (–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å): %d',
                default: [ 0 ],
            },
        ]
    },
    second: {
        type: 'page',
        childs: [
            '–ê –≤–æ—Ç —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–∞ —É–∂–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–∞ –≤–Ω–µ –±–ª–æ–∫–∞',
            {
                type: 'button',
                onClick: {
                    action: 'getPage',
                    args: ['main']
                },
                text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'
            },
        ]
    },
}

const pageWatches = {};

class API extends APIProto{
    getPage(name){
        if(!pageWatches[name]) pageWatches[name] = 1;
        else pageWatches[name]++;
        return pages[name]
    }
    getWatchesCount(page, id){
        const watches = pageWatches[page] || 0;
        if(id) return {
            type: 'edit',
            id,
            data: [ watches ],
        };
        else return [ watches ]
    }
    throwServerError(){
        throw new Error('Error description from server')
    }
}

new API(/* port */ 8553)
